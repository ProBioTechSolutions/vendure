name: Deploy Vendure
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  GCLOUD_PROJECT: ekosynbiotyk

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ekosynbiotyk
          credentials_json: ${{ secrets.GCLOUD_DEVOPS_KEY }}
      - uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ekosynbiotyk
      - name: Build Docker container
        run: ./build-docker.sh ekosynbiotyk

  deploy-production:
    name: Deploying Prod ${{ matrix.instances.name }} with ${{ matrix.instances.secret }}
    needs: [ build ]
    strategy:
      matrix:
        instances: [
          { name: "probio-vendure", secret: "ENV_PROD"},
        ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ekosynbiotyk
          credentials_json: ${{ secrets.GCLOUD_DEVOPS_KEY }}
      - uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ekosynbiotyk
      - run: 'echo "$SECRET_VARS" > .env'
        env:
          SECRET_VARS: ${{secrets[matrix.instances.secret]}}
      - run: ./deploy.sh ${{ matrix.instances.name }} ekosynbiotyk

#  deploy-test:
#    if: ${{ github.ref == 'refs/heads/develop' }}
#    name: Deploying Test ${{ matrix.instances.name }} with ${{ matrix.instances.secret }}
#    needs: [ build ]
#    strategy:
#      matrix:
#        instances: [
#          { name: "ekosynbiotyk-test-api", db: "test-db", secret: "ENV_TEST", memory: "1G"},
#          { name: "ekosynbiotyk-test-worker", db: "test-db", secret: "ENV_TEST", memory: "1G"},
#        ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: google-github-actions/auth@v0
#        with:
#          project_id: $GCLOUD_PROJECT
#          credentials_json: ${{ secrets.GCLOUD_DEVOPS_KEY }}
#      - uses: 'google-github-actions/setup-gcloud@v0'
#        with:
#          project_id: $GCLOUD_PROJECT
#      - run: 'echo "$SECRET_VARS" > .env'
#        env:
#          SECRET_VARS: ${{secrets[matrix.instances.secret]}}
#      - run: ./deploy.sh ${{ matrix.instances.name }} ${{ matrix.instances.db }} ${{ matrix.instances.memory }} $GCLOUD_PROJECT
